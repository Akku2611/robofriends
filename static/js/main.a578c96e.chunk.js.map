{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","id","name","email","className","src","alt","CardList","robots","map","user","index","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","toLowerCase","includes","length","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAgBeA,G,MAbF,SAACC,GAAW,IACdC,EAAmBD,EAAnBC,GAAIC,EAAeF,EAAfE,KAAMC,EAASH,EAATG,MACjB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BJ,GAAMK,IAAI,WAC5C,gCACI,6BAAKJ,IACL,4BAAIC,YCYLI,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEIV,GAAIO,EAAOG,GAAOV,GAClBC,KAAMM,EAAOG,GAAOT,KACpBC,MAAOK,EAAOG,GAAOR,OAHhBQ,SCKlBC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,8BACI,uBACIV,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCEXI,G,MATA,SAAClB,GACZ,OACI,qBAAKmB,MAAQ,CAACC,UAAU,SAAUC,OAAO,kBAAmBC,OAAO,SAAnE,SACKtB,EAAMuB,aC8CJC,E,kDA3CX,aAAe,IAAD,8BACV,gBAeJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEd,YAAaa,EAAME,OAAOC,SAf1C,EAAKC,MAAQ,CACTtB,OAAQ,GACRK,YAAa,IAJP,E,gEAQO,IAAD,OAChBkB,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,EAAKR,SAAS,CAAEnB,OAAQ2B,S,+BAS1B,IAAD,EAC2BC,KAAKN,MAA7BtB,EADH,EACGA,OAAQK,EADX,EACWA,YACVwB,EAAiB7B,EAAO8B,QAAO,SAAA9B,GACjC,OAAOA,EAAON,KAAKqC,cAAcC,SAAS3B,EAAY0B,kBAE1D,OAAI/B,EAAOiC,OAKH,sBAAKrC,UAAU,KAAf,UACI,6CACA,cAAC,EAAD,CAAWU,aAAcsB,KAAKX,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUjB,OAAQ6B,SARvB,6C,GA5BDK,IAAMC,WCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a578c96e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n    const {id, name, email} = props;\r\n    return(\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${id}`} alt=\"robots\" />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react'\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    return(\r\n        <div>\r\n            {\r\n                robots.map((user, index) => {\r\n                    return (\r\n                        <Card \r\n                            key={index} \r\n                            id={robots[index].id} \r\n                            name={robots[index].name} \r\n                            email={robots[index].email}\r\n                        />\r\n                    );\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n    return(\r\n        <div>\r\n            <input\r\n                className='pa2 ba b--green bg-lightest-blue'\r\n                type='search' \r\n                placeholder='Search Robots' \r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={ {overflowY:'scroll', border:'1px solid black', height:'500px'} }>\r\n            {props.children}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Scroll;","import React from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\n//import { robots } from '../components/robots';\r\nimport './App.css';\r\nimport Scroll from '../components/Scroll';\r\n\r\nclass App extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => {\r\n                this.setState({ robots: users})\r\n            })\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robots => {\r\n            return robots.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        if(!robots.length){\r\n            return <h1>Loading</h1>\r\n        } \r\n        else {\r\n            return(\r\n                <div className=\"tc\">\r\n                    <h1>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange}/>\r\n                    <Scroll>\r\n                        <CardList robots={filteredRobots} />\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}